name: CI-Schema

on:
  - push
  - pull_request
jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        id: python-setup
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v3
        with:
          key: venv-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          path: venv

      - name: Load cached mypy
        id: cached-mypy
        uses: actions/cache@v3
        with:
          key: poetry-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          path: .mypy_cache

      - name: Load cached pytest
        id: cached-pytest
        uses: actions/cache@v3
        with:
          key: poetry-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          path: .pytest_cache

      - name: Update pip
        run: python -m pip install -U pip

      - name: create venv
        run: python -m venv venv

      - name: activate venv
        run: source venv/bin/activate

      - name: Install deps
        run: python -m pip install .[dev]

      - name: Install hatch
        run: pip install hatch

      - name: run flake8 linter
        run: flake8 .

      - name: run mypy
        run: mypy .

      - name: run pytest
        run: hatch run pytest .
